extern mod sdl;
extern mod std;

use core::rand::RngUtil;
use core::libc::uint32_t;
use std::timer::sleep;
use std::uv;
use sdl::video::Color;

fn main() {
  let iotask = ~uv::global_loop::get();

  do sdl::start {
    sdl::init([sdl::InitVideo]);
    sdl::wm::set_caption("rust-sdl demo - video", "rust-sdl");

    let rng = rand::Rng();
    let screen = match sdl::video::set_video_mode(800, 600, 32, [sdl::video::HWSurface],
                                                              [sdl::video::DoubleBuf]) {
      Ok(screen) => screen,
      Err(err) => fail!(fmt!("failed to set video mode: %s", err))
    };

    let mut i = 0;
    loop main: {
      loop event: {
        match sdl::event::poll_event() {
          sdl::event::QuitEvent => break main,
          sdl::event::NoEvent => break event,
          _ => {}
        }
      }
      sleep(iotask, 100);
      screen.with_lock(|pixels| {
        unsafe {
          let pixels: &mut [uint32_t] = cast::transmute(pixels);
          pixels[i] = rng.gen::<sdl::video::Color>().to_mapped((*screen.raw).format);
          i = i + 1;
        }
      });
      screen.flip();
    }

    sdl::quit();
  }
}
